apiVersion: apps/v1
kind: Deployment
metadata:
  name: golang-fiber-deployment-mariadb
spec:
  selector:
    matchLabels:
      app: golang-fiber-mariaDb
  template:
    metadata:
      labels:
        app: golang-fiber-mariaDb
    spec:
      containers:
        - name: golang-fiber-mariadb
          image: mariadb
          livenessProbe:
            exec:
              command: [ "mysqladmin", "-uroot", "-p$MYSQL_ROOT_PASSWORD", "ping" ]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              # Check we can execute queries over TCP (skip-networking is off).
              command:
                - /bin/sh
                - -ec
                - set -ex
                - >-
                  mysql -h127.0.0.1 -uroot -p$MYSQL_ROOT_PASSWORD -e'SELECT 1'
              #command: ["mysql", "-h", "127.0.0.1","-uroot","-p$MYSQL_ROOT_PASSWORD", "-e", "SELECT 1"]
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
          args:
            - --init-file
            - /shared-files/table.sql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mariadb-credentials
                  key: mysql-root-password
            - name: MYSQL_ROOT_HOST
              value: "%"
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: db-data
            - mountPath: /shared-files
              name: root
      volumes:
        - name: db-data
          hostPath:
            path: /data/volume-example
        - name: root
          hostPath:
            path: /
---
apiVersion: v1
kind: Service
metadata:
  name: golang-fiber-service-mariadb
spec:
  type: ClusterIP
  selector:
    app: golang-fiber-mariaDb
  ports:
  - port: 3306
    targetPort: 3306
---
apiVersion: v1
kind: Secret
metadata:
  name: mariadb-credentials
type: Opaque
data:
  mysql-root-password: root


